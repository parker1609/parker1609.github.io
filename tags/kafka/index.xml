<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kafka on Parker Blog</title>
    <link>https://parker1609.github.io/tags/kafka/</link>
    <description>Recent content in Kafka on Parker Blog</description>
    <image>
      <title>Parker Blog</title>
      <url>https://parker1609.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://parker1609.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 29 May 2023 10:27:57 +0900</lastBuildDate><atom:link href="https://parker1609.github.io/tags/kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Boot에서 카프카 사용하기</title>
      <link>https://parker1609.github.io/post/spring-boot-kafka/</link>
      <pubDate>Mon, 29 May 2023 10:27:57 +0900</pubDate>
      
      <guid>https://parker1609.github.io/post/spring-boot-kafka/</guid>
      <description>이 글의 코드는 해당 링크에서 확인할 수 있습니다.
목표 Spring Boot 에서 Apache Kafka 사용 방법
자주 사용하는 설정 정리
테스트 개발 환경 Spring Boot 3.1.0
Java 17
Spring Kafka 3.0.7
kafka-client 3.4.0 Gradle
Docker
Broker 테스트 개발 환경에서는 카프카를 로컬에서 Docker 파일로 띄우고, Spring 서버에서 이를 연결한다.
로컬에서 Docker로 Apache Kafka 실행하기 kafka docker image 비교 bitnami
confluentinc
wurstmeister
링크 다운로드 수 star 수 특징 confluentinc DockerDocker 100M+ 394 confluent 에서 제공하는 기능이 포함 bitnami DockerDocker 100M+ 669 순수 카프카 이미지 wurstmeister DockerDocker 100M+ 1.</description>
    </item>
    
    <item>
      <title>[Kafka] 101 - 카프카에 대한 소개와 주요 설정</title>
      <link>https://parker1609.github.io/post/kafka-101/</link>
      <pubDate>Sun, 07 May 2023 12:39:08 +0900</pubDate>
      
      <guid>https://parker1609.github.io/post/kafka-101/</guid>
      <description>카프카(Apache Kafka)란? Apache Kafka is an open-source distributed event streaming platform used by thousands of companies for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.
카프카는 대용량의 실시간 데이터 스트리밍 플랫폼으로서, 분산형 메시지 큐 시스템으로 동작한다. 카프카는 다음과 같은 특징을 가지고 있다.
높은 처리량과 낮은 지연시간 페이지 캐시 배치 전송 처리 (프로듀서 및 컨슈머는 단 건이 아닌 여러 개로 처리 가능) 압축 전송 (네트워크 통신 효율) 배치와 같이 사용하면 효과가 더욱 커진다.</description>
    </item>
    
  </channel>
</rss>
