<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Parker Blog</title>
    <link>https://parker1609.github.io/post/</link>
    <description>Recent content in Posts on Parker Blog</description>
    <image>
      <title>Parker Blog</title>
      <url>https://parker1609.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://parker1609.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 26 Feb 2023 14:45:58 +0900</lastBuildDate><atom:link href="https://parker1609.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>자바 웹 기술 역사</title>
      <link>https://parker1609.github.io/post/java-web-history/</link>
      <pubDate>Sun, 26 Feb 2023 14:45:58 +0900</pubDate>
      
      <guid>https://parker1609.github.io/post/java-web-history/</guid>
      <description>1. CGI (Common Gateway Interface) World Wide Web(WWW)은 초기에는 데이터가 동적으로 변하는 것에 대한 생각은 하지 않아 정적인 페이지 위주로 개발이 되었다. 시간이 흘러 웹은 점점 더 많은 데이터를 보여주도록 변하였고, 사용자가 필요에 따라 바로바로 데이터를 보여주는 동적인 페이지에 대한 수요가 늘었다. 동적인 페이지의 예제는 요즘은 흔히 찾아볼 수 있다. 웹 화면 사이드에 여러 광고가 보인다거나, 게시글이 보여지고 내가 보고 싶은 게시글을 검색한다거나, 댓글을 다는 등의 행동은 모두 동적인 페이지에서 이루어진다.</description>
    </item>
    
    <item>
      <title>Java 11 vs Java 17</title>
      <link>https://parker1609.github.io/post/java-11-vs-java-17/</link>
      <pubDate>Fri, 24 Feb 2023 11:53:53 +0900</pubDate>
      
      <guid>https://parker1609.github.io/post/java-11-vs-java-17/</guid>
      <description>1. 지원기간 https://www.oracle.com/java/technologies/java-se-support-roadmap.html
자바 11버전은 최대 2026년 9월까지 지원 자바 17버전은 최대 2029년 9월까지 지원 2. Java 11 VS 17, 주요 변경사항 아래 예제 코드의 전체는 https://github.com/programming-starter/java-17-starter 이 링크에서 확인할 수 있습니다.
Text Blocks 문자열을 좀 더 읽기 좋게 표현할 수 있게 되었다. 특히 JSON과 같은 문자열을 표현할 때, 예전에는 다음과 같이 표현해야 했다.
{ &amp;#34;name&amp;#34;: &amp;#34;parker&amp;#34;, &amp;#34;age&amp;#34;: 30, &amp;#34;job&amp;#34;: &amp;#34;Programmer&amp;#34; } @Test void old_style() { var json = &amp;#34;{\n&amp;#34; + &amp;#34; \&amp;#34;name\&amp;#34;: \&amp;#34;parker\&amp;#34;,\n&amp;#34; + &amp;#34; \&amp;#34;age\&amp;#34;: 30,\n&amp;#34; + &amp;#34; \&amp;#34;job\&amp;#34;: \&amp;#34;Programmer\&amp;#34;\n&amp;#34; + &amp;#34;}&amp;#34;; System.</description>
    </item>
    
    <item>
      <title>Hugo 블로그 생성 과정 (theme PaperMod)</title>
      <link>https://parker1609.github.io/post/creating-my-blog-with-hugo/</link>
      <pubDate>Sun, 19 Feb 2023 15:09:26 +0900</pubDate>
      
      <guid>https://parker1609.github.io/post/creating-my-blog-with-hugo/</guid>
      <description>1. Hugo 설치 및 블로그 테마 설정 Mac OS 기준
1.1. Hugo 설치하기 # Hugo 설치 brew install hugo # hugo 버전 확인 hugo version &amp;gt; hugo v0.104.3+extended darwin/amd64 BuildDate=unknown 1.2. Hugo 블로그 만들기 &amp;amp; PaperMod 테마 설치하기 Hugo 블로그 역시 여러가지 테마를 가지고 있고, 이는 이 링크에서 확인할 수 있다. 그 중 PaperMod 테마가 깔끔하고 마음에 들어 선택하였다. 테마마다 블로그 설정이 조금씩 달라질 수 있으므로, 테마의 레퍼런스도 꼼꼼히 확인해보기를 추천한다.</description>
    </item>
    
  </channel>
</rss>
